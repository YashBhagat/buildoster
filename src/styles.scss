
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@import url('https://fonts.googleapis.com/css2?family=Lexend:wght@100;300;400;500&display=swap');
@import "variables-theme.scss";
@import "mixins-theme.scss";
@import "uikit-theme.scss";
@import "/src/style/_variables";


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$buildoster-primary: mat.define-palette(mat.$indigo-palette, 9000);
$buildoster-accent: mat.define-palette(mat.$indigo-palette, 200);

// The warn palette is optional (defaults to red).
$buildoster-warn: mat.define-palette(mat.$pink-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$buildoster-theme: mat.define-light-theme((
  color: (
    primary: $buildoster-primary,
    accent: $buildoster-accent,
    warn: $buildoster-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($buildoster-theme);

/* You can add global styles to this file, and also import other style files */

html, body {
   height: 100%;
   background-color: $primary-color;
   -webkit-tap-highlight-color: transparent;
   }
body {
    margin: 0;
    font-family: Roboto, "Lexend", sans-serif;
    background-color: $primary-color;
    width: 95%;
    margin: 0 auto;
   }

   .mat-dialog-container {
    background:  $primary-color !important;
    color: $text-color !important;
    box-shadow: -0px 0px 0px #0F1546;
    border-radius: 25px !important;
    padding: 0px !important;
  }

  /* Border */
.mat-form-field-appearance-outline .mat-form-field-outline {
  color: $acent-color !important;
  background-color: $primary-color;
  border-radius: 10px;
}

/* Font color */
input.mat-input-element {
  color: white !important;
   font-family: $primary-fonts;
}


//Standard
.mat-form-field-appearance-outline {
  .mat-input-element {
    color: $text-color !important;
    font-family: $primary-fonts;
  }
  .mat-form-field-label {
    color: $text-color !important;
    font-family: $primary-fonts;

  }
  .mat-form-field-underline {
    background-color: $text-color !important;
    font-family: $primary-fonts;
  }
  .mat-form-field-ripple {
    background-color: $text-color !important;
    font-family: $primary-fonts;
  }
  .mat-form-field-required-marker {
    color: $text-color !important;
    font-family: $primary-fonts;
  }
}

//Focus
.mat-form-field.mat-focused {
  .mat-form-field-label {
    color: $text-color !important;
    font-family: $primary-fonts;
  }
  .mat-form-field-ripple {
    background-color: $text-color !important;
    font-family: $primary-fonts;
  }
  .mat-form-field-required-marker {
    color: $text-color !important;
    font-family: $primary-fonts;
  }
  .mat-input-element {
    color: $text-color !important; ;
    font-family: $primary-fonts;
  }
}

//Error
.mat-form-field.mat-form-field-invalid {
  .mat-input-element {
    color: $warm-color;
  }
  .mat-form-field-label {
    color: $warm-color;
    .mat-form-field-required-marker {
      color: $warm-color;
    }
  }
  .mat-form-field-ripple {
    background-color: $warm-color;
  }
}

